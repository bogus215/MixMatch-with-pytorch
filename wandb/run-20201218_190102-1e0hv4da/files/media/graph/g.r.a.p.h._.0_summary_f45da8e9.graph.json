{"format": "torch", "nodes": [{"name": "conv1", "id": 2512852499976, "class_name": "Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)", "parameters": [["weight", [16, 3, 3, 3]]], "output_shape": [[64, 16, 32, 32]], "num_parameters": [432]}, {"name": "block1", "id": 2512852499656, "class_name": "NetworkBlock(\n  (layer): Sequential(\n    (0): BasicBlock(\n      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)\n      (relu1): LeakyReLU(negative_slope=0.1, inplace=True)\n      (conv1): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)\n      (relu2): LeakyReLU(negative_slope=0.1, inplace=True)\n      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (convShortcut): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    )\n    (1): BasicBlock(\n      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)\n      (relu1): LeakyReLU(negative_slope=0.1, inplace=True)\n      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)\n      (relu2): LeakyReLU(negative_slope=0.1, inplace=True)\n      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n    )\n    (2): BasicBlock(\n      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)\n      (relu1): LeakyReLU(negative_slope=0.1, inplace=True)\n      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)\n      (relu2): LeakyReLU(negative_slope=0.1, inplace=True)\n      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n    )\n    (3): BasicBlock(\n      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)\n      (relu1): LeakyReLU(negative_slope=0.1, inplace=True)\n      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)\n      (relu2): LeakyReLU(negative_slope=0.1, inplace=True)\n      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n    )\n  )\n)", "parameters": [["layer.0.bn1.weight", [16]], ["layer.0.bn1.bias", [16]], ["layer.0.conv1.weight", [32, 16, 3, 3]], ["layer.0.bn2.weight", [32]], ["layer.0.bn2.bias", [32]], ["layer.0.conv2.weight", [32, 32, 3, 3]], ["layer.0.convShortcut.weight", [32, 16, 1, 1]], ["layer.1.bn1.weight", [32]], ["layer.1.bn1.bias", [32]], ["layer.1.conv1.weight", [32, 32, 3, 3]], ["layer.1.bn2.weight", [32]], ["layer.1.bn2.bias", [32]], ["layer.1.conv2.weight", [32, 32, 3, 3]], ["layer.2.bn1.weight", [32]], ["layer.2.bn1.bias", [32]], ["layer.2.conv1.weight", [32, 32, 3, 3]], ["layer.2.bn2.weight", [32]], ["layer.2.bn2.bias", [32]], ["layer.2.conv2.weight", [32, 32, 3, 3]], ["layer.3.bn1.weight", [32]], ["layer.3.bn1.bias", [32]], ["layer.3.conv1.weight", [32, 32, 3, 3]], ["layer.3.bn2.weight", [32]], ["layer.3.bn2.bias", [32]], ["layer.3.conv2.weight", [32, 32, 3, 3]]], "output_shape": [[64, 32, 32, 32]], "num_parameters": [16, 16, 4608, 32, 32, 9216, 512, 32, 32, 9216, 32, 32, 9216, 32, 32, 9216, 32, 32, 9216, 32, 32, 9216, 32, 32, 9216]}, {"name": "block2", "id": 2512852499336, "class_name": "NetworkBlock(\n  (layer): Sequential(\n    (0): BasicBlock(\n      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)\n      (relu1): LeakyReLU(negative_slope=0.1, inplace=True)\n      (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)\n      (relu2): LeakyReLU(negative_slope=0.1, inplace=True)\n      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (convShortcut): Conv2d(32, 64, kernel_size=(1, 1), stride=(2, 2), bias=False)\n    )\n    (1): BasicBlock(\n      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)\n      (relu1): LeakyReLU(negative_slope=0.1, inplace=True)\n      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)\n      (relu2): LeakyReLU(negative_slope=0.1, inplace=True)\n      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n    )\n    (2): BasicBlock(\n      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)\n      (relu1): LeakyReLU(negative_slope=0.1, inplace=True)\n      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)\n      (relu2): LeakyReLU(negative_slope=0.1, inplace=True)\n      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n    )\n    (3): BasicBlock(\n      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)\n      (relu1): LeakyReLU(negative_slope=0.1, inplace=True)\n      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)\n      (relu2): LeakyReLU(negative_slope=0.1, inplace=True)\n      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n    )\n  )\n)", "parameters": [["layer.0.bn1.weight", [32]], ["layer.0.bn1.bias", [32]], ["layer.0.conv1.weight", [64, 32, 3, 3]], ["layer.0.bn2.weight", [64]], ["layer.0.bn2.bias", [64]], ["layer.0.conv2.weight", [64, 64, 3, 3]], ["layer.0.convShortcut.weight", [64, 32, 1, 1]], ["layer.1.bn1.weight", [64]], ["layer.1.bn1.bias", [64]], ["layer.1.conv1.weight", [64, 64, 3, 3]], ["layer.1.bn2.weight", [64]], ["layer.1.bn2.bias", [64]], ["layer.1.conv2.weight", [64, 64, 3, 3]], ["layer.2.bn1.weight", [64]], ["layer.2.bn1.bias", [64]], ["layer.2.conv1.weight", [64, 64, 3, 3]], ["layer.2.bn2.weight", [64]], ["layer.2.bn2.bias", [64]], ["layer.2.conv2.weight", [64, 64, 3, 3]], ["layer.3.bn1.weight", [64]], ["layer.3.bn1.bias", [64]], ["layer.3.conv1.weight", [64, 64, 3, 3]], ["layer.3.bn2.weight", [64]], ["layer.3.bn2.bias", [64]], ["layer.3.conv2.weight", [64, 64, 3, 3]]], "output_shape": [[64, 64, 16, 16]], "num_parameters": [32, 32, 18432, 64, 64, 36864, 2048, 64, 64, 36864, 64, 64, 36864, 64, 64, 36864, 64, 64, 36864, 64, 64, 36864, 64, 64, 36864]}, {"name": "block3", "id": 2512852632712, "class_name": "NetworkBlock(\n  (layer): Sequential(\n    (0): BasicBlock(\n      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)\n      (relu1): LeakyReLU(negative_slope=0.1, inplace=True)\n      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)\n      (relu2): LeakyReLU(negative_slope=0.1, inplace=True)\n      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (convShortcut): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)\n    )\n    (1): BasicBlock(\n      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)\n      (relu1): LeakyReLU(negative_slope=0.1, inplace=True)\n      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)\n      (relu2): LeakyReLU(negative_slope=0.1, inplace=True)\n      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n    )\n    (2): BasicBlock(\n      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)\n      (relu1): LeakyReLU(negative_slope=0.1, inplace=True)\n      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)\n      (relu2): LeakyReLU(negative_slope=0.1, inplace=True)\n      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n    )\n    (3): BasicBlock(\n      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)\n      (relu1): LeakyReLU(negative_slope=0.1, inplace=True)\n      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)\n      (relu2): LeakyReLU(negative_slope=0.1, inplace=True)\n      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n    )\n  )\n)", "parameters": [["layer.0.bn1.weight", [64]], ["layer.0.bn1.bias", [64]], ["layer.0.conv1.weight", [128, 64, 3, 3]], ["layer.0.bn2.weight", [128]], ["layer.0.bn2.bias", [128]], ["layer.0.conv2.weight", [128, 128, 3, 3]], ["layer.0.convShortcut.weight", [128, 64, 1, 1]], ["layer.1.bn1.weight", [128]], ["layer.1.bn1.bias", [128]], ["layer.1.conv1.weight", [128, 128, 3, 3]], ["layer.1.bn2.weight", [128]], ["layer.1.bn2.bias", [128]], ["layer.1.conv2.weight", [128, 128, 3, 3]], ["layer.2.bn1.weight", [128]], ["layer.2.bn1.bias", [128]], ["layer.2.conv1.weight", [128, 128, 3, 3]], ["layer.2.bn2.weight", [128]], ["layer.2.bn2.bias", [128]], ["layer.2.conv2.weight", [128, 128, 3, 3]], ["layer.3.bn1.weight", [128]], ["layer.3.bn1.bias", [128]], ["layer.3.conv1.weight", [128, 128, 3, 3]], ["layer.3.bn2.weight", [128]], ["layer.3.bn2.bias", [128]], ["layer.3.conv2.weight", [128, 128, 3, 3]]], "output_shape": [[64, 128, 8, 8]], "num_parameters": [64, 64, 73728, 128, 128, 147456, 8192, 128, 128, 147456, 128, 128, 147456, 128, 128, 147456, 128, 128, 147456, 128, 128, 147456, 128, 128, 147456]}, {"name": "bn1", "id": 2512852587592, "class_name": "BatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)", "parameters": [["weight", [128]], ["bias", [128]]], "output_shape": [[64, 128, 8, 8]], "num_parameters": [128, 128]}, {"name": "relu", "id": 2512915727496, "class_name": "LeakyReLU(negative_slope=0.1, inplace=True)", "parameters": [], "output_shape": [[64, 128, 8, 8]], "num_parameters": []}, {"name": "fc", "id": 2512835423368, "class_name": "Linear(in_features=128, out_features=10, bias=True)", "parameters": [["weight", [10, 128]], ["bias", [10]]], "output_shape": [[64, 10]], "num_parameters": [1280, 10]}], "edges": []}